@page "/feature-usage"
@using NuGet.Frameworks
@using Terrajobst.ApiCatalog.Features

<div class="mt-3 container-fluid">
    <div class="mx-auto col-md-5">
        <h3>
            Feature Usage
        </h3>
        <table class="table">
            @foreach (var (usageSource, usages) in GetUsages())
            {
                <tr>
                    <th>
                        @usageSource.Name
                    </th>
                    <td>
                        @foreach (var usage in usages)
                        {
                            var value = usage.Percentage * 100;
                            var title = $"Usage on {usageSource.Name} is {usage.Percentage:P5} (as of {usageSource.Date})";

                            <div class="row align-items-center" title="@title">
                                <div class="col col-md-5 col-xl-3">
                                    <div class="progress">
                                        <div class="progress-bar" role="progressbar" style="width: @value%;" title="@title" aria-valuenow="@value" aria-valuemin="0" aria-valuemax="100"></div>
                                    </div>
                                </div>
                                <div class="col" style="max-width: 5rem;">
                                    @usage.Percentage.ToString("P1")
                                </div>
                                <div class="col text-muted small">
                                    <span title="@usage.Feature.Description">@usage.Feature.Name</span>
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<div class="mt-3 container-fluid">
    <div class="mx-auto col-md-5">
        <div>
            <h3>
                Framework Usage
            </h3>
        </div>

        @{
            if (NuGetSource is not null)
            {
                <table class="table table-striped table-sm">
                    @{
                        WriteRows(Hierarchy.Roots);
                    }
                </table>
            }

            void WriteRows(IEnumerable<TargetFrameworkNode> nodes)
            {
                foreach (var node in nodes)
                {
                    var featureId = FeatureDefinition.TargetFramework.GetFeatureId(node.Framework);
                    var percentage = CatalogService.UsageData.GetUsage(NuGetSource, featureId);
                    var percentageText = percentage is null ? string.Empty : percentage.Value.ToString("P0");
                    var value = percentage * 100;
                    var isExpanded = IsExpanded(node);
                    var isLeaf = !node.Children.Any();
                    var leftOffset = isLeaf ? 20.8 : 0;
                    var marginLeft = node.Level == 0 ? "" : $"padding-left: {node.Level * 30 + leftOffset}px;";
                    var icon = isExpanded
                                    ? "oi-minus"
                                    : "oi-plus";
                    var frameworkName = node.Framework.Version == FrameworkConstants.EmptyVersion
                                        ? node.Framework.GetFrameworkDisplayString()
                                        : node.Framework.GetShortFolderName();
                    var usageDetailsTitle = percentage is null
                                    ? $"No usage of {frameworkName} on {NuGetSource.Name} (as of {NuGetSource.Date})"
                                    : $"Usage of {frameworkName} on {NuGetSource.Name} is {percentage:P5} (as of {NuGetSource.Date})";

                    <tr title="@usageDetailsTitle">
                        <th scope="row" onmousedown="@(() => ExpandNode(node, !isExpanded))"
                            role="button"
                            style="@marginLeft">

                            @if (!isLeaf)
                            {
                                <span class="oi @icon pr-2 text-muted small"></span>
                            }

                            @node.Name

                            @if (node.Children.Count > 0)
                            {
                                <span class="ml-1 font-weight-normal text-muted">(@node.Children.Count)</span>
                            }
                        </th>
                        <td>
                            @if (value is not null)
                            {
                                <div class="row">
                                    <div class="col-8">
                                        <div class="progress">
                                            <div class="progress-bar" role="progressbar" style="width: @value%;" title="@title" aria-valuenow="@value" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        @percentageText
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>

                    if (IsExpanded(node))
                        WriteRows(node.Children);
                }
            }
        }
    </div>
</div>
