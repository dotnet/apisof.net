@page "/"
@namespace ApisOfDotNet.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>.NET API Catalog</title>
    <base href="~/" />
    <link rel="icon" type="image/png" href="favicon.png">
    <link rel="stylesheet" media="(prefers-color-scheme: light)" href="~/css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" media="(prefers-color-scheme: dark)" href="~/lib/forevolve/bootstrap-dark/dist/css/bootstrap-dark.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/twitter-bootstrap/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
        var observer = new MutationObserver(function (mutations, observer) {
            $('[data-toggle="popover"]').popover({
                placement: 'top',
                trigger: 'hover',
                boundary: 'body'
            });
            $('[data-toggle="popover"]').on('click', function () {
                $('[data-toggle="popover"]').popover('dispose');
            });
            $('.search-result-row.selected').each(function () {
                this.scrollIntoView({block: "nearest"});
            });
        });
        observer.observe(document, {
            subtree: true,
            childList: true,
            attributes: true
        });
        document.addEventListener("keydown", e => {
            if (e.ctrlKey && e.key === 'k') {
                window.showSearch();
                e.preventDefault();
            }
        })
        window.registerSearchInputKeyDown = (element, helper) => {
            window.showSearch = () => {
                helper.invokeMethodAsync('ShowSearch');
            }
            $(element).keydown(function (e) {
                if (e.keyCode == 38) {
                    helper.invokeMethodAsync('SelectPrevious');
                    e.preventDefault();
                }
                else if (e.keyCode == 40) {
                    helper.invokeMethodAsync('SelectNext');
                    e.preventDefault();
                }
                else if (e.keyCode == 13) {
                    helper.invokeMethodAsync('Accept');
                    e.preventDefault();
                }
            });
        }
    </script>
</body>
</html>
